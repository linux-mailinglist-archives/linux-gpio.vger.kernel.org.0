Return-Path: <linux-gpio-owner@vger.kernel.org>
X-Original-To: lists+linux-gpio@lfdr.de
Delivered-To: lists+linux-gpio@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id ECD55355114
	for <lists+linux-gpio@lfdr.de>; Tue,  6 Apr 2021 12:40:44 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S229968AbhDFKkv (ORCPT <rfc822;lists+linux-gpio@lfdr.de>);
        Tue, 6 Apr 2021 06:40:51 -0400
Received: from mail.kernel.org ([198.145.29.99]:42974 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S229787AbhDFKku (ORCPT <rfc822;linux-gpio@vger.kernel.org>);
        Tue, 6 Apr 2021 06:40:50 -0400
Received: from disco-boy.misterjones.org (disco-boy.misterjones.org [51.254.78.96])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 0C34B613B3;
        Tue,  6 Apr 2021 10:40:43 +0000 (UTC)
Received: from 78.163-31-62.static.virginmediabusiness.co.uk ([62.31.163.78] helo=why.misterjones.org)
        by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
        (Exim 4.94)
        (envelope-from <maz@kernel.org>)
        id 1lTj8S-005phd-Sn; Tue, 06 Apr 2021 11:40:40 +0100
Date:   Tue, 06 Apr 2021 11:40:40 +0100
Message-ID: <87mtubpufr.wl-maz@kernel.org>
From:   Marc Zyngier <maz@kernel.org>
To:     Geert Uytterhoeven <geert@linux-m68k.org>
Cc:     Linus Walleij <linus.walleij@linaro.org>,
        "open list:GPIO SUBSYSTEM" <linux-gpio@vger.kernel.org>,
        Bartosz Golaszewski <bgolaszewski@baylibre.com>,
        Yash Shah <yash.shah@sifive.com>,
        "Wesley W . Terpstra" <wesley@sifive.com>
Subject: Re: [PATCH 1/2 v1] gpio: sifive: Set affinity callback to parent
In-Reply-To: <CAMuHMdUu2UpcbvNGuDfHAp+aFGkhMS4rJXLwiqQu6QFB+FytBw@mail.gmail.com>
References: <20201117213351.249668-1-linus.walleij@linaro.org>
        <CAMuHMdUu2UpcbvNGuDfHAp+aFGkhMS4rJXLwiqQu6QFB+FytBw@mail.gmail.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/27.1
 (x86_64-pc-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
X-SA-Exim-Connect-IP: 62.31.163.78
X-SA-Exim-Rcpt-To: geert@linux-m68k.org, linus.walleij@linaro.org, linux-gpio@vger.kernel.org, bgolaszewski@baylibre.com, yash.shah@sifive.com, wesley@sifive.com
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false
Precedence: bulk
List-ID: <linux-gpio.vger.kernel.org>
X-Mailing-List: linux-gpio@vger.kernel.org

On Tue, 06 Apr 2021 11:20:57 +0100,
Geert Uytterhoeven <geert@linux-m68k.org> wrote:
> 
> Hi Linus,
> 
> On Tue, Nov 17, 2020 at 10:37 PM Linus Walleij <linus.walleij@linaro.org> wrote:
> > This assigns the .irq_set_affinity to the parent callback.
> > I assume the sifive GPIO can be used in systems with
> > SMP.
> >
> > I used the pattern making the hirerarchy tolerant for missing
> > parent as in Marc's earlier patches.
> >
> > Cc: Yash Shah <yash.shah@sifive.com>
> > Cc: Wesley W. Terpstra <wesley@sifive.com>
> > Suggested-by: Marc Zyngier <maz@kernel.org>
> > Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
> 
> Thanks for your patch!
> 
> > ---
> > ChangeLog RFT->v1:
> > - Make the affinity setting call return -EINVAL if there
> >   is no parent.
> 
> Would it make sense to incorporate this check into
> irq_chip_set_affinity_parent(), so drivers can just point
> .irq_set_affinity to the latter, without having to provide (duplicate)
> the same wrapper over and over?

Calling one of the irq_chip_*_parent() functions assumes that there
*is* a parent at all times, because you really need to know what
context you are in by construction. There are a couple of exceptions
to this rule (irqchip state, retriggering), but overall I'd like to
stick to it and leave the checks on the implementations that have
weird setups.

I would assume that it is possible to know at the point where you map
the interrupt whether it has a parent or not, and use a different
irqchip. Is that doable in this case?

Thanks,

	M.

-- 
Without deviation from the norm, progress is not possible.
