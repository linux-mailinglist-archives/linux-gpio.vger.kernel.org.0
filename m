Return-Path: <linux-gpio-owner@vger.kernel.org>
X-Original-To: lists+linux-gpio@lfdr.de
Delivered-To: lists+linux-gpio@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id C0596344D05
	for <lists+linux-gpio@lfdr.de>; Mon, 22 Mar 2021 18:15:52 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232095AbhCVRPW (ORCPT <rfc822;lists+linux-gpio@lfdr.de>);
        Mon, 22 Mar 2021 13:15:22 -0400
Received: from mailout-l3b-97.contactoffice.com ([212.3.242.97]:51548 "EHLO
        mailout-l3b-97.contactoffice.com" rhost-flags-OK-OK-OK-OK)
        by vger.kernel.org with ESMTP id S232130AbhCVROy (ORCPT
        <rfc822;linux-gpio@vger.kernel.org>);
        Mon, 22 Mar 2021 13:14:54 -0400
X-Greylist: delayed 308 seconds by postgrey-1.27 at vger.kernel.org; Mon, 22 Mar 2021 13:14:54 EDT
Received: from ichabod.co-bxl (ichabod.co-bxl [10.2.0.36])
        by mailout-l3b-97.contactoffice.com (Postfix) with ESMTP id CB305B20;
        Mon, 22 Mar 2021 18:09:43 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed; t=1616432983;
        s=20210208-e7xh; d=mailfence.com; i=sandberg@mailfence.com;
        h=Date:From:Reply-To:To:Cc:Message-ID:In-Reply-To:References:Subject:MIME-Version:Content-Type:Content-Transfer-Encoding;
        l=3154; bh=/hgqO5ZsAVAgZfu59qc2m/K3l7Dz5a7SBsFl7p7niKE=;
        b=AWFH0ecBse0ocyD99wo8gCh0f5gU6wmxUb0SB83KJXhOpPBhIo55jOzXrnFZGv8/
        P9xabKaTxLknt9/PFygnxacpD+9hzWB3mVN2PP7D6zqLYL00Q80A/ofaZ/Zv+4/T0q8
        h36SwpZoxh0N4IikaCdGO2OZeVpb14YUlsN6lQQZgItuH25VWzqknppx3UCGZ8nUBuz
        SftHguZeMj6fxErBTcARkLZqOypRQ0vcLP+xfODe2H0vhDqJh81ZblOpAcatrtE2Spl
        s/fvSWboqoYMXs+w29RcpocUFuYmsVXu+E2NN6I8YEDRaE6zkaTMySP+J+KHEMkWHh6
        w/8DIKG+JQ==
Date:   Mon, 22 Mar 2021 18:09:40 +0100 (CET)
From:   Mauri Sandberg <sandberg@mailfence.com>
Reply-To: Mauri Sandberg <sandberg@mailfence.com>
To:     Andy Shevchenko <andy.shevchenko@gmail.com>,
        Drew Fustini <drew@beagleboard.org>
Cc:     Linux GPIO <linux-gpio@vger.kernel.org>
Message-ID: <1911385944.526128.1616432980719@ichabod.co-bxl>
In-Reply-To: <20210322061916.GC392062@x1>
References: <545111184.50061.1615922388276@ichabod.co-bxl> <CAHp75VdhX1iC_JKyDigFrwzn7mUvvk0PGC-fgVUvJtYS+Dz6Hw@mail.gmail.com> <CAHp75Vd-OT7SVBKMjhZNbVdo24Ep5Jv6_xMY39JDRLTrB0pi-A@mail.gmail.com> <20210322061916.GC392062@x1>
Subject: Re: RFC for a GPIO input muxer
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-Mailer: ContactOffice Mail
X-ContactOffice-Account: com:250217426
Precedence: bulk
List-ID: <linux-gpio.vger.kernel.org>
X-Mailing-List: linux-gpio@vger.kernel.org



> ----------------------------------------
> From: Drew Fustini <drew@beagleboard.org>
> Sent: Mon Mar 22 07:19:16 CET 2021
> To: Andy Shevchenko <andy.shevchenko@gmail.com>
> Cc: Mauri Sandberg <sandberg@mailfence.com>, Linux GPIO <linux-gpio@vger.kernel.org>
> Subject: Re: RFC for a GPIO input muxer
> 
> 
> On Wed, Mar 17, 2021 at 02:30:50PM +0200, Andy Shevchenko wrote:
> > +Cc: Drew, I believe he has some thoughts about.
> > 
> > On Wed, Mar 17, 2021 at 1:17 AM Andy Shevchenko
> > <andy.shevchenko@gmail.com> wrote:
> > >
> > >
> > >
> > > On Tuesday, March 16, 2021, Mauri Sandberg <sandberg@mailfence.com> wrote:
> > >>
> > >> I am writing to you to ask for comments on the preferred way of implementing a 4-way GPIO multiplexer in the most generic way. The situation is that there is a dual 4-way multiplexer on my device and its select pins a controlled with GPIOs. The output pins of the multiplexer are connected to two other GPIOs. The datasheet of the multiplexer is here: https://assets.nexperia.com/documents/data-sheet/74HC_HCT153.pdf
> > >>
> > >> This is what I have been contemplating on but I am not aware if the same could be achieved with existing pinctrl or gpio driver or combination of those.
> > >
> > >
> > > To me looks like a typical pinmux. Dunno if pinctrl supports pure pinmux and how it can handle that at runtime.
> 
> Regarding runtime pinmux, this patchset by myself was recently merged
> and might be of interest [1].
Thanks, I'll have a look.

> 
> > >
> > >  That said, I would consider what has been done in pinctrl for that.
> > >>
> > >>
> > >> The 'key-mux1' below implements a gpio-controller that drives the multiplexer and provides gpios for reading device key presses. At the moment it has to be polled as interrupts are not being generated by the key presses. I tried looking around but software interrupts did not give me any hits.
> > >>
> > >> I have omitted 'key-mux2' from this for clarity.
> > >>
> > >> mux: mux-controller {
> > >>         compatible = "gpio-mux";
> > >>         #mux-control-cells = <0>;
> > >>
> > >>         mux-gpios = <&gpio 9 GPIO_ACTIVE_HIGH>,         /* s0 */
> > >>                     <&gpio 11 GPIO_ACTIVE_HIGH>;        /* s1 */
> > >> };
> > >>
> > >> gpio2: key-mux1 {
> > >>         compatible = "gpio-mux-input";
> > >>         mux-controls = <&mux>;
> > >>
> > >>         gpio-controller;
> > >>         #gpio-cells = <2>;
> > >>
> > >>         // GPIOs used by this node, mux pin
> > >>         pin-gpios = <&gpio 12 GPIO_ACTIVE_HIGH>;        /* 1y */
> > >> };
> 
> I don't see "gpio-mux-input" in mainline so I presume you wrote a driver
> than uses this binding?  If so, could you share the code?
Oh yes, the code is at [2]. I  must apologize as it's still WIP but it should convey the general idea. It looks for a multiplexer, then proceeds to grab a GPIO pin and finally creates a gpio_chip.

Before polishing up I though it might be better to ask first if it is even the right approach.

> 
> Thanks,
> Drew
> 
> [1] https://lore.kernel.org/linux-gpio/20210302053059.1049035-1-drew@beagleboard.org/

[2] https://github.com/msandber/linux/blob/gpio-mux-input/drivers/gpio/gpio-mux-input.c

Thanks,
Mauri
